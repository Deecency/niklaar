RegExp regex = RegExp(r"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\.[a-zA-Z]+");class Validators {  int lock = 0;  String? validateEmail(String? email) {    if (email == '') {      return null;    } else if (!RegExp(      r'^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\'      r'.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$',    ).hasMatch(email!)) {      return 'Email is invalid';    } else {      return null;    }  }  String? validateUsername(String? name) {    if (name?.isNotEmpty ?? false) {      if (name!.length < 8) {        return 'Username must be greater than 8 characters';      }      if (name.length > 25) {        return 'Username must be less than 25 characters';      }      if (RegExp('[A-Z]').hasMatch(name)) {        return 'Username must contain uppercase';      }      if (RegExp('[^a-zA-Z0-9]').hasMatch(name)) {        return 'Username must contain special characters';      }    }    return null;  }  String? validatePhoneNumber(String? str) {    final regExp10 = RegExp(      r'((^\+)(234){1}[0-9]{10})|((^234)[0-9]{10})|((^0)(7|8|9){1}(0|1){1}[0-9]{8})',    );    if (!regExp10.hasMatch(str!)) {      return 'Phone number is invalid';    } else {      return null;    }  }  String? validateFullName(String? fullName) {    if (fullName != null && fullName.isEmpty) {      return 'Name must not be empty';    }    if (fullName != null && fullName.split(' ').length < 2) {      return 'Must be more than 3 characters';    }    return null;  }  String? validatePassword(String? value, String? text) {    if (value != null && value.isNotEmpty) {      if (value.length < 8) {        return 'Must be at least 8 characters.';      } else if (!RegExp('[A-Z]').hasMatch(value)) {        return 'Password must contain uppercase!';      } else if (!RegExp('[a-z]').hasMatch(value)) {        return 'Password must contain lowercase!';      } else if (!RegExp('[0-9]').hasMatch(value)) {        return 'Password must contain at least one digit!';      } else if (!RegExp(r'[!?^*@#$/&~-]').hasMatch(value)) {        return 'Password must contain at least one symbol!';      } else if (value.length >= 8 && text != null && value != text) {        return 'Passwords do not match';      }      return null;    }    return null;  }  static bool isValidEmail(String str) {    return RegExp(      r'^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$',    ).hasMatch(str);  }}