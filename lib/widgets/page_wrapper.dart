import 'package:flutter/material.dart';import 'package:smart_rob/core/core.dart';class PageWrapper extends StatelessWidget {  const PageWrapper({    super.key,    this.child,    this.bgImage,    this.bottom = true,    this.hideBg = false,    this.canPop = true,    this.backgroundColor,    this.padding,    this.appBar,    this.bottomNavigationBar,    this.bottomSheet,    this.floatingActionButton,    this.resizeToAvoidBottomInset,    this.scaffoldKey,  });  final Widget? child;  final EdgeInsets? padding;  final bool hideBg;  final String? bgImage;  final bool bottom;  final bool canPop;  final Color? backgroundColor;  final bool? resizeToAvoidBottomInset;  final Widget? bottomNavigationBar;  final Widget? floatingActionButton;  final Widget? bottomSheet;  final GlobalKey<ScaffoldState>? scaffoldKey;  final PreferredSizeWidget? appBar;  @override  Widget build(BuildContext context) {    final bottomPadding = MediaQuery.paddingOf(context).bottom;    return PopScope(      canPop: canPop,      child: Scaffold(        key: scaffoldKey,        resizeToAvoidBottomInset: resizeToAvoidBottomInset,        backgroundColor: backgroundColor ?? context.theme.scaffoldBackgroundColor,        bottomNavigationBar: bottomNavigationBar,        bottomSheet: bottomSheet,        appBar: appBar,        extendBody: true,        floatingActionButton: floatingActionButton,        body: Container(          height: MediaQuery.of(context).size.height,          width: MediaQuery.of(context).size.width,          decoration:              hideBg || bgImage == null                  ? null                  : BoxDecoration(                    image: DecorationImage(                      fit: BoxFit.cover,                      colorFilter: ColorFilter.mode(AppColors.white, BlendMode.darken),                      image: AssetImage(bgImage ?? 'assets/images/onboarding-bg.png'),                    ),                  ),          child: SafeArea(            bottom: false,            top: false,            minimum:                padding ??                (appBar != null                    ? EdgeInsets.fromLTRB(20, 0, 20, bottom ? (bottomPadding + 5) : 0)                    : EdgeInsets.fromLTRB(20, 53, 20, bottom ? (bottomPadding + 5) : 0)),            child: child ?? const SizedBox.shrink(),          ),        ),      ),    );  }}class FormPageWrapper extends PageWrapper {  FormPageWrapper({    super.key,    Widget? child,    Widget? header,    super.bgImage,    super.bottom,    super.hideBg,    super.backgroundColor,    super.padding,    super.appBar,    super.bottomNavigationBar,    super.floatingActionButton,    super.bottomSheet,    super.resizeToAvoidBottomInset,    super.scaffoldKey,  }) : super(         child: Builder(           builder: (context) {             return CustomScrollView(               keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.onDrag,               physics: const ClampingScrollPhysics(),               slivers: [                 if (header != null)                   PinnedHeaderSliver(                     child: ColoredBox(                       color: backgroundColor ?? context.theme.scaffoldBackgroundColor,                       child: header,                     ),                   ),                 SliverFillRemaining(hasScrollBody: false, child: child),               ],             );           },         ),       );}