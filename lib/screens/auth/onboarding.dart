import 'package:animate_do/animate_do.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:signals/signals_flutter.dart';import 'package:smart_rob/core/core.dart';import 'package:smart_rob/screens/auth/sign_up/sign_up.dart';import '../../widgets/widgets.dart';final endOnboarding = signal<bool>(false);final currPage = signal<int>(0);class OnboardingScreen extends StatefulWidget {  const OnboardingScreen({super.key});  @override  State<OnboardingScreen> createState() => _OnboardingScreenState();}class _OnboardingScreenState extends State<OnboardingScreen> with SingleTickerProviderStateMixin {  late AnimationController _controller;  late Animation<Offset> _animation;  OverlayEntry? _overlayEntry;  @override  void initState() {    super.initState();    _controller = AnimationController(vsync: this, duration: Duration(seconds: 1))      ..repeat(reverse: true);    _animation = Tween<Offset>(      begin: Offset(0, 0),      end: Offset(1.5, 0),    ).animate(CurvedAnimation(parent: _controller, curve: Curves.easeInOut));    Future.delayed(Duration(milliseconds: 500), _showOverlay);  }  @override  void dispose() {    _controller.dispose();    _removeOverlay();    super.dispose();  }  @override  Widget build(BuildContext context) {    return PageWrapper(      padding: EdgeInsets.zero,      child: Container(        decoration: BoxDecoration(          gradient: LinearGradient(            begin: Alignment.topCenter,            end: Alignment.bottomCenter,            colors: [AppColors.secondary, AppColors.primary],          ),        ),        child: Stack(          children: [            PageView.builder(              itemCount: 4,              physics:                  endOnboarding.watch(context)                      ? NeverScrollableScrollPhysics()                      : BouncingScrollPhysics(),              onPageChanged: (value) async {                currPage.value = value;                if (value == 3) {                  await Future.delayed(Duration(seconds: 1));                  if (currPage.value == 3) {                    endOnboarding.value = true;                  }                  return;                }                endOnboarding.value = false;              },              scrollDirection: Axis.horizontal,              itemBuilder:                  (context, index) => Stack(                    alignment: Alignment.topCenter,                    children: [                      FadeInUp(                        child: Align(                          alignment: Alignment.bottomCenter,                          child: Image.asset('assets/images/onboard_${index + 1}.png'),                        ),                      ),                      FadeInLeft(                        child: Column(                          mainAxisSize: MainAxisSize.min,                          children: [                            139.vSpace,                            if (endOnboarding.watch(context) && index == 3) ...[                              FadeInUp(                                child: SvgPicture.asset('assets/logos/logo_white.svg', height: 39),                              ),                              379.vSpace,                              AppButton(                                text: 'Create an account',                                onTap: () => context.push(SignUpScreen()),                              ),                              8.vSpace,                              AppButton(text: 'Sign in', onTap: () {}, style: ABStyle.secondary),                            ] else ...[                              Text(                                titles[index],                                textAlign: TextAlign.center,                                style: TextStyles.w800_20(context).copyWith(                                  fontSize: 32,                                  height: 32 / 32,                                  color: AppColors.white,                                  letterSpacing: -0.5,                                ),                              ),                              8.vSpace,                              Text(                                subs[index],                                textAlign: TextAlign.center,                                style: TextStyles.w400_16(context).copyWith(                                  height: 19.49 / 16,                                  color: AppColors.white,                                  letterSpacing: -0.5,                                ),                              ),                            ],                          ],                        ),                      ),                    ],                  ),            ),            if (!(endOnboarding.watch(context) && currPage.watch(context) == 3))              Positioned(                bottom: 40,                left: 0,                right: 0,                child: PageIndicator(                  currentPage: currPage.watch(context),                  pageCount: 4,                  inactiveHeight: 7,                  activeWidth: 19,                  borderRadius: BorderRadius.circular(100),                  shape: BoxShape.rectangle,                ),              ),          ],        ),      ),    );  }  final titles = [    'Discover & Share\nthe Best Deals',    'Unlock Exclusive\nDiscounts',    'Borderless Payments,\nInstant Transfers',    'Build & Track Your\nCredit Score',  ];  final subs = [    'Explore amazing deals or share your own\nwith the community',    'Get more visibility and increase sales by listing\non influencer pages on the discount '        'market',    'Enjoy seamless money transfers and hassle-free\ntransactions.',    'Stay credible and trustworthy by shopping,\nreviewing, and engaging with deals.',  ];  void _showOverlay() {    if (_overlayEntry != null) return;    _overlayEntry = OverlayEntry(      builder:          (context) => Stack(            children: [              Positioned.fill(                child: GestureDetector(                  onTap: _removeOverlay,                  onHorizontalDragEnd: (details) => _removeOverlay(),                  child: Container(color: AppColors.black.withValues(alpha: 0.5)),                ),              ),              Positioned(                top: MediaQuery.of(context).size.height * 0.5,                left: 0,                right: 0,                child: Column(                  crossAxisAlignment: CrossAxisAlignment.center,                  children: [                    SlideTransition(                      position: _animation,                      child: Image.asset('assets/images/left.png', height: 60, color: Colors.white),                    ),                    10.vSpace,                    Material(                      color: Colors.transparent,                      child: Text(                        'Swipe to explore',                        style: TextStyle(                          fontSize: 18,                          color: Colors.white,                          fontWeight: FontWeight.bold,                        ),                      ),                    ),                  ],                ),              ),            ],          ),    );    Overlay.of(context, rootOverlay: true).insert(_overlayEntry!);  }  void _removeOverlay() {    _overlayEntry?.remove();    _overlayEntry = null;  }}